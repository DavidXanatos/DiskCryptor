##  @file
#   DiskCryptor library
#
# Copyright (c) 2019. DiskCryptor, David Xanatos
#
# This program and the accompanying materials are licensed and made available 
# under the terms and conditions of the GNU General Public License, version 3.0 (GPL-3.0).
# 
# The full text of the license may be found at
# https://opensource.org/licenses/GPL-3.0
#
##

[Defines]
  INF_VERSION                    = 0x00010006
  BASE_NAME                      = DiskCryptorLib
  MODULE_UNI_FILE                = DiskCryptorLib.uni
  FILE_GUID                      = 6166A5F2-3257-4856-9E85-5409564975B4
  MODULE_TYPE                    = UEFI_DRIVER
  VERSION_STRING                 = 1.0
  LIBRARY_CLASS                  = DiskCryptorLib|DXE_DRIVER DXE_RUNTIME_DRIVER UEFI_APPLICATION UEFI_DRIVER

#
#  VALID_ARCHITECTURES           = IA32 X64
#

[Sources]
  crypto_fast/aes_asm.h
  crypto_fast/aes_key.h
  crypto_fast/aes_padlock.h
  crypto_fast/serpent.h
  crypto_fast/sha512.h
  crypto_fast/sha512_pkcs5_2.h
  crypto_fast/twofish.h
  crypto_fast/xts_aes_ni.h
  crypto_fast/xts_fast.h
  crypto_fast/xts_serpent_avx.h
  crypto_fast/xts_serpent_sse2.h
  crypto_small/aes_small.h
  crypto_small/sha512_small.h
  crypto_small/sha512_pkcs5_2_small.h
  crypto_small/serpent_small.h
  crypto_small/twofish_small.h
  crypto_small/xts_small.h
  DcsDiskCryptor.h
  emmintrin.h
  include/volume.h
  include/boot/bios.h
  include/boot/boot.h
  include/boot/boot_hook.h
  include/boot/dc_header.h
  include/boot/dc_io.h
  include/boot/e820.h
  include/boot/hdd_io.h
  include/boot/hdd.h
  include/defines.h
  intrin.h

[Sources.common]
  DcsDiskCryptor.c
  dc_header.c
  dc_io.c

# Note: we use the small code for legacy 32 bit implementation

[Sources.X64]
# crypto_fast/sha512.c          # Conflict with Sha2.c in VeraCryptLib.inf
# crypto_fast/sha512_pkcs5_2.c  # Conflict with Sha2.c in VeraCryptLib.inf
# crypto_fast/sha512_hmac.c     # Conflict with Sha2.c in VeraCryptLib.inf
  crypto_fast/xts_fast.c
  crypto_fast/aes_key.c
  crypto_fast/twofish.c
  crypto_fast/serpent.c
  crypto_fast/amd64/aes_amd64.nasm
  crypto_fast/amd64/aes_padlock_amd64.nasm
  crypto_fast/amd64/twofish_amd64.nasm
  crypto_fast/amd64/xts_aes_ni_amd64.nasm
  crypto_fast/amd64/xts_serpent_avx_amd64.nasm
  crypto_fast/amd64/xts_serpent_sse2_amd64.nasm
  crypto_small/sha512_pkcs5_2_small.c
  crypto_small/sha512_small.c

[Sources.IA32]
  crypto_small/aes_small.c
  crypto_small/serpent_small.c
  crypto_small/twofish_small.c
  crypto_small/xts_small.c
  crypto_small/sha512_pkcs5_2_small.c
  crypto_small/sha512_small.c

[Packages]
  MdePkg/MdePkg.dec
  DcsPkg/DcsPkg.dec
  CryptoPkg/CryptoPkg.dec

[LibraryClasses]
  MemoryAllocationLib
  UefiLib
  RngLib
  BaseCryptLib
  
[Protocols]


[BuildOptions.IA32]
MSFT:DEBUG_*_IA32_CC_FLAGS    == /arch:IA32 /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm /FAcs /D_UEFI
MSFT:RELEASE_*_IA32_CC_FLAGS  == /arch:IA32 /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /FIAutoGen.h /EHs-c- /GR- /GF /FAcs /D_UEFI
MSFT:NOOPT_*_IA32_CC_FLAGS    == /arch:IA32 /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm /Od /FAcs /D_UEFI

*_*_IA32_NASM_FLAGS = --prefix _

[BuildOptions.X64]
MSFT:DEBUG_*_X64_CC_FLAGS    == /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm /D_UEFI
MSFT:RELEASE_*_X64_CC_FLAGS  == /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /Gy /FIAutoGen.h /EHs-c- /GR- /GF /D_UEFI
MSFT:NOOPT_*_X64_CC_FLAGS    == /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm /Od /D_UEFI
